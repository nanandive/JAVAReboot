1. [static 키워드]에 대해서 설명하세요. 
   - 키워드와 식별자
   - 사용할 수 있는 곳 : 클래스, 메서드, 필드
       ㄴ  1)중첩 클래스에서만 사용할 수 있다. X
       ㄴ  2) static 변수 == 클래스 변수 == 정적 변수 == 공유(shared) 변수
                  변수 3가지 종류
                  ㄱ. 지역변수
                  ㄴ. 인스턴스 변수
                  ㄷ. 클래스변수
                  - 필드를 선언할 때 왜 사용하는 가 ? static 필드 로 선언한다. 
                      - Save 클래스의 rate 필드를 왜 static 변수로 선언했는지 생각을 해 보시면 될거 같아요.
                      모든 Save의 객체(인스턴스)가 공유되는  이자율을 필드로 가지고 있을 필요가 없어요. 
                      생성되는 객체 마다 8바이트 이자율 기억공간을 가지고 있을 필요가 없어요. 
                  - 선언 형식
                       public [static] double rate;
                   - 생성시기/ 소멸시기
                   프로그램 시작될 때  클래스 (Save) 가 로딩되고 그 때 인스턴스를 생성하지 않아도 
                   자동으로 static 필드는 메모리에 할당 된다. 
                   프로그램 종료될 때.... 
                  
       ㄴ  3). static 메서드
                  - static 메서드는 왜 필요한가 ?
                    1)  static 필드를 사용하기 위해서.
                          private static double rate;
                         public static getter, setter
                     2) 인스턴스를 생성하지 않고도 클래스명으로 간편히 사용할 수 있도록 메서드를 선언하기 위해서.
                         자주 사용되는 메서드 .  인스턴스 변수를 사용하지 않는 메서드 라면 
                         static 메서드로 선언을 한다.
                         Math 클래스 안의 모든 메서드는 static 메서드 이다..  
                         Math.abs();
                         Math.random();
                   - static 메서드 선언 형식
                       public static void getXXX(){
                          
                       } 
                    -  생성시기 / 소멸시기           
                    -  클래스명.static메서드()
                    -  지역변수 O,
                        인스턴스변수 X    
  
  ㄷ. 클래스 변수에 접근하는 방법
                *** 클래스명.static필드명 ***
                
                객체명.static필드명  - 가능
                만약에 private 로 선언되어 있다면 
                getter, setter 선언- static 메서드로 선언
                클래스명.static 메서드() 호출.
                
  ㄹ. 기타

10:10 수업 시작~ 
2.  "가변인자와 오버로딩"에 대해서 설명하세요.
    1) 오버로딩
    int sum(int a, int b);
    int sum(int a, int b, int c);
    int sum(int a, int b, int c, int d );
    5정수, 6정수, 7정수 ....
    오버라이딩 X
    => 
    int sum( int [] m )  선언
    
    2) JDK 1.5  가변인자 추가.
                     자료형...매개변수
    int sum(  int... args         ){
    }   
    
    내부적으로  int[] 로 처리.
    효율적 X
    주의할 점 )  선언 위치.
    String a, String... args  제일 끝에 가변인자 1번 선언

3. 필드(멤버변수)를 초기화 하는 방법 및 우선 처리 순위에 대해서 설명하세요
    - 초기화 ?  변수을 값을 처음으로 할당하는 것.
    int a = 10;  // 초기화    
    int b ;
    b = 20;  // 초기화
    
    - 지역변수는 초기화를 하지 않으면 에러발생.
    - 필드는 초기화를 하지 않으면 각 자료형의 기본값으로 설정. ( 초기화 X )
    
    1) 명시적 초기화
    2) 초기화 블럭
        인스턴스 초기화 블럭
        클래스 초기화 블럭
    3) 생성자
    
    초기화 순서 
    
4. 클래스 간의 관계에 대해서 설명하세요 .
    1)  has - a  관계 
         -    Car 클래스와 Engine 클래스 간의 관계..
         class Car{
            Engine engine ;   // = new Engine(); // 좋은 코딩 X
            왜? 결합성이 높은 코딩은 좋은 코딩이 안니다. 
            예) 십자 드라이버   +  ( 일체형 )        
            Car( Engine engine){
               this.engine = engine;
            }  
            
            public void setEngine( Engine engine){
               this.engine = engine;
            }
         }
         - 의존성 주입( DI )
           1)  생성자
           2)  setter
        
    2)  is -a 관계( 상속 관계)

5. 상속(inheritance)에 대해서 설명하세요 
  ㄱ. 정의 :  기존클래스 -> 재사용 -> 새로운 클래스 .
                    Super                            Sub  ***
                    this 키워드    = 클래스(객체, 인스턴스) 자기 자신의 주소값을 가지는 참조변수
                    super 키워드 = 클래스(객체, 인스턴스) 부모의 주소값을 가지는 참조변수
                    
                    부모                                자식
                    기초                               파생
                    상위                               하위
  ㄴ. 장점 :  코드량 , 재사용 -> 생산성,  유지,보수 용이 등등
  ㄷ. 선언형식 :  extends Super클래스{
  }
  
6. 모든 클래스의 최상위 부모클래스는 ?  java.lang.Object

       class Ex04{
          // 필드 x
          // 메서드 X
       }
       
       Ex04 obj = new Ex04();
       obj.9개의 메서드 멤버로 보여요..      - Object
       자바 컴파일러가 자동으로 extends Object를 추가해서 컴파일 한다. 

7. 오버로딩(overload)과 오버라이딩(override)에 대해서 설명하세요 .
    1) 오버로딩
        함수명동일하고    매개변수 타입이나 갯수가 다른 중복선언된 함수..
        중복함수
        리턴자료형 X
        
    2) 오버라이딩
       부모클래스로 부터 상속받은 메서드를 재정의하는 함수
       재정의 함수
         Shape 도형
         void draw(){
             syso [color='black]
          }
          class Circle  extends Shape      
         @Override 애노테이션 위에 붙였어요..
         void draw(){
             syso  [center, radius]
         }


-- 이전 복습 --
8. this 키워드에 대해서 설명하세요 
   ㄱ. 정의 
   ㄴ. 용도 3가지

9. 생성자(constructor)에 대해서 설명하세요    

10. 클래스 앞과 멤버 앞에 붙는 접근지정자에 대해서 설명하세요. 

11. 객체에 멤버를 접근하는 방법
   











      
  