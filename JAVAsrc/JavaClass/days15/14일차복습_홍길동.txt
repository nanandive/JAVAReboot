1. 용어 정리
  1) 객체 지향적 프로그래밍( OOP )
      Object + Object + Object + Object + Object + ...
      재, 생, 유지보수, 버젼 관리 용이 등등
     객체 지향적 프로그래밍 언어 : 자바
        
  2) 객체      :   클래스를 자료형으로 선언된 참조 변수.
      Car myCar;  // 변수, 지역변수, 참조변수, [객체명]  
  3) 클래스    :  객체 설계도
  4) 인스턴스 :  생성된 객체
         myCar = new Car();
  5) 인스턴스화 : 객체를 생성하는 과정.
           new Car()
  
  예) 
  클래스 선언
  public Car{
      // 필드
      // 메서드
  }
  
  6) 객체의 구성요소 = 멤버
        속성(특징 proprety) = 변수 = 멤버변수 = 필드 ( field )
        기능(일 function) = 함수 = 멤버함수 = 메서드( method )
  7) 멤버 
  8) 멤버변수
  9) 멤버함수
  10) 필드
  11) 메서드
  
  12) 변수    :   값을 저장하는 메모리 저장공간
                      변하는 수
                      값을 다시 할당할 수 있는 저장공간.
       상수
       
       리터럴
                     
  13) 참조변수 : 주소값을 저장하는 메모리 저장공간
  
     참조타입 :배열 , 클래스,  인터페이스
     
     new 연산자  힙(동적)영역 실제 메모리할당이 되고 ->    주소를 참조하는 변수

2. 클래스의 특징( OOP의 특징 )에 대해서 설명하세요.
    캡슐화
    은닉화 - 접근지정자                   강사+프린터기1대
    상속성
    다형성
    추상화

3. 클래스의 설계 과정에 대해서 설명하세요. 
   1) 목록작성 :  필드(속성), 메서드( 기능 )
   2) 클래스 설계
   3) 테스트
   4) 유지 보수 - 디버깅
   5) 상용화 
   6) 배포
   7) 버젼 관리.

4. [객체]에 [멤버(필드, 메서드, 생성자 )]를 접근하는 방법에 대해서 설명하세요.
    Car myCar = null;
    Car myCar = new Car();
    // 필드  speed, wheelCount, name
    객체명.필드명
    객체명.메서드명()
    myCar.speed = 100;
    myCar.name = "스포츠카-2";
    NullPointerException  인스턴스화 X ( 객체 생성 X )
    
    힙(동적)                                              스택
    
    인스턴스                                                  객체
    [name][s][w][메서드()]                  [객체주소 0x100] myCar
    0x100
    
       
10:06 수업~
5. NullPointerException 예외(에러)는 언제 발생하는 가 ? 
    1)
    int [] m = null;
    m[0] =100;
    
    2) 
    Car myCar = null;
    myCar.speed = 100;
    
 

6. 클래스의 선언 형식
                  Modifier
     [접근지정자] [기타제어자] class  클래스명 [extends 수퍼클래스] [implements 인터페이스...]{
     } 

7. 클래스 앞의 접근지정자의 종류에 대해서 설명하세요.
    public 
    default
    protected
    private

8. 멤버 앞의 접근지정자의 종류에 대해서 설명하세요.
    public 
    default
    protected
    private

9. 클래스 선언할 때 기타제어자 종류에 대해서 설명하세요.
   abstract
   final
   static    

10. 클래스 복사 ( 객체 복사 )에 대해서 설명하세요. ( 수업 예제 )

     class Tv{
         // field, method 선언
     }   
     
     Tv t1 = new Tv();
     Tv t2 = new Tv();
     
     Tv t3 = t1;   // 객체 복사( 클래스 복사  copy )
     
     tvCopy(   t1 );
     
     syso(  t1.channel ); // 10
      
     public void tvCopy( Tv    t ){   // Tv t = t1  객체 복사
        t.channel = 10;
     }
 

11.  클래스 배열( 객체 배열 ) 에 대해서 설명하세요. ( 수업 예제 ) 

    https://blog.naver.com/crazem/222993824695
    
    클래스
    class Person(){
       String name;
       int age;
    }
    
    Person p1 = null;
    p1 = new Person();
    
    Method     Heap                                     Stack
                       인스턴스                                          객체
                      [name][age]                       [0x100번지] p1
                      0x100번지                             생성된 객체(인스턴스)의 주소를 참조
                      
                     [1][][]                                      [0x200번지] m
                     0x200번지
 
     객체명.필드명
     p1.name = "홍길동";
     
     
     int [] m;
     m = new int[3];
     m[0] = 1;
     
     
     Car [] cars = null ;
     cars = new Car[3];
     Heap                                              Stack
     [0x400][][]                                              [0x300] cars
     0x300
     cars[0]
     
     ["홍길동"][s][wc][]  인스턴스
     0x400
     
     cars[0] = new Car();
     cars[0].name = "홍길동"
     
     
     for( i=0;   i< 3){
        cars[i] = new Car();
        cars[i] ="이름"
     }
     

12.  선언되는 위치를 기준으로 변수 구분하고, 생성시기, 소멸시기에 대해서 설명하세요. 
      
      Test t = new Test();
      
      t = null;
      GC  소멸..
      
      javac.exe 컴파일 ->  .class  바이트코드
      java.exe 실행기 -> 실행  JVM
      
      class Test{
      
        {  // 초기화 블럭
        }
        
        static{  // static 초기화 블럭
        }
         
         // 필드                     new Test();
         // 인스턴스 변수 / 인스턴스(생성된 객체) / 인스턴스 소멸될때
         public String name = null ;
         // 클래스 변수( == static 변수 ) / 프로그램시작 / 프로그램 종료
         static double pi = 0.0;
         
         // 메서드
         public void disp(){
               int x ;  // 지역변수, 반드시 초기화 해야지 사용할 수 있다. 
               syso( x ) ;  // 
               {
                    
               }
         }
         
      }







