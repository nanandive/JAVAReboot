1.  국어 점수를 입력받아서 반환하는 메서드를 선언하세요. 
   ( 조건 : 정규표현식을 사용해서 유효성 검사하고 유효하지 않은 국어 점수 일 때는
    반복해서 다시 입력받도록 처리하세요. )
    
    1) 기능  : 점수반환 함수(메서드)  getScore
    2) 매개변수 : X
    3) 리턴값 및 리턴자료형 : int 
    
    public static int getScore(){
        Scanner scanner = ;
        String kor  ;
        String regex = "100|[1-9]?\\d";
        
       do{
          syso("> 점수 입력 ? ");         
          kor = scanner.next();
       }while(   !kor.matches( regex )  );
    
        return  Integer.parseInt( kor ); 
    }
    
2. 년도를 매개변수로 받아서 윤년, 평년을 boolean 형으로 반환하는 메서드를 선언하세요.

    public static boolean isLeapYear( int year ){
         return year % 0 ==0 && year % 100 != 0  ||   year %400 ==0;
    }


3. 메서드 정의 ?  프로그래밍에서 반복적인 코드를 재사용할 목적으로  묶어놓은 것.
                           프로그램 구조화-> 유지,보수 용이.
                           팀작업 가능 등등 
                           
                           오버로딩( Overloading ) == 중복 함수
                           drawLine() 
                           drawLine(int n) 
                           drawLine(int n , char style) 
 
4. 재귀  [호출] 함수 정의 ?  함수 안에서 자기 자신을 호출하는 함수. 
  
  public static void disp(){
       syso();
       
       disp(); // 자기 자신 호출 부분
  }

5. 정규표현식 구조 요약

	1) [abc]
	    [0123456789] == [0-9] 
	2) [^abc]           
	3) [a-zA-Z]    [abcdef.... z] == [a-zA-Z]  대소문자
	
	10:05 수업 시작.~
	4) [a-d[m-p]]      [a-dm-p] (union 합집합)
	5) [a-z&&[def]]  [def] d, e, or f (intersection 교집합)
	6) [a-z&&[^bc]]   a through z,except for b and c: [ad-z] (subtraction 차집합)
	7) [a-z&&[^m-p]]    [a-lq-z](subtraction 차집합)
	
		8) \d  == [0-9]
		9) \D  == [^0-9]
		10) \s  공백문자
		11) \S   ^공백문자
		12) \w   대소문자 + 숫자
		13) \W  ^대소문자 + 숫자 	
	14) X?    0, 1
	15) X*    0 ~ 여러번
	16) X+    1  ~ 여러번
	17) X{n}          \d{5}
	18) X{n,}     최소 n 이상
	19) X{n,m}   n ~ m
      