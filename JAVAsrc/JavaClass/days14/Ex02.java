package days14;

/**
 * @author ♈ k§nik
 * @date 2023. 2. 14. - 오전 10:03:37
 * @subject 
 * @content 
 */
public class Ex02 {

	public static void main(String[] args) {
		/*
		 * 1. 객체       지향적 프로그래밍
		 *     Object  Oriented Programming
		 *     OOP
		 *     - 프로그램을 개발하는 방법(기법)
		 *     예) 건물 짓는 공법
		 *     - 객체(물건, 부품) 단위로 프로그래밍.
		 *     예)   컴퓨터 조립                                  애플리케이션 
		 *          1)  머니(경제)
		 *          2)  용도
		 *          
		 *          메인보드/CPU/그래픽카드 ( 객체, 부품 )
		 *          케이스 ( 객체, 부품 )
		 *          SSD/HDD ( 객체, 부품 )
		 *          ODD ( 객체, 부품 )
		 *          메모리 ( 객체, 부품 )  16기가  +> 32기가
		 *          전원장치 ( 객체, 부품 )
		 *          등등
		 *          
		 *          부품 각각을 주문
		 *          -> 부품 모두 도착 
		 *          -> 컴퓨터 조립 + 운영체제 설치 + 소프트웨어 설치
		 *          테스트
		 *        
		 *          애플리케이션 = Object + Object + Object + Object + ... 
		 *          생산성   :                     A + B  사내  업무용 메신저 프로그램
		 *                                             250 * 6개월
		 *                                             3천만원
		 *                                             
		 *                                             100만원 
		 *          유지, 보수  - 관리 용이
		 *          코드 재사용
		 *          
		 *   2.   
		 *       1) 클래스 =  객체를 만들기 위한 설계도    ( 객체의 설계도    )
		 *       2)객체   =  클래스로 실제 존재하는 것.   사물(유형) 또는  개념( 무형 ) 의 객체  
		 *       3) 인스턴스   = 생성된 객체를 인스턴스라고 한다. 
		 *            인스턴스화 =  공장에서 설계도면을 보면서 용접,절단-> 물건을 만드는 과정   
		 *                                             클래스 -> 객체를 생성하는 과정.
		 *                                             
		 *   3. OOP의 특징 == 클래스의 특징
		 *       1) 캡슐화
		 *       2) 은닉화
		 *       3) 상속성
		 *       *** 4) 다형성 ***
		 *       5) 추상화      
		 *       
		 *   4. 객체(물건)의 구성요소 =  기능(일)                          +   속성(특징)
		 *      예) 망치                     = 못치고, 못 빼고                  + 손잡이(나무) + 쇠 + 크기 등등
		 *       1)  객체의 구성요소를 "멤버"라고 부른다. 
		 *       2) 기능(일)    == function == 멤버함수 == 메서드(method)
		 *       3) 속성(특징) == property == 멤버변수 == 필드( field )
		 *       
		 *   5.  클래스(  객체-> 설계도면 )를 설계하는 과정
		 *      예)   토지 +  별장   ----> 건축설계사 -> 설계도
		 *              머니
		 *        1) 객체의 구성요소 파악   -> 목록 작성
		 *                       기능+속성              메서드, 필드
		 *        2) 클래스 선언                  
		 *            [접] [기] class 클래스명 [extends 수퍼클래스] [implements 인터페이스...]{
		 *            
		 *                     // 멤버 ( 클래스의 구성 요소 )
		 *                     // ㄱ. 필드 ( field )
		 *                     // ㄴ. 메서드(method)
		 *            
		 *            }
		 *        3) 객체 생성 - 테스트
		 *        4) 문제점 파악 - 유지, 보수 
		 *        5) 상용화
		 *        6) 기능 추가, 확장  - 버전 관리    
		 *  
		 *  11:00 수업 시작~~
		 *   6.  클래스
		 *       자바의 자료형
		 *         1 ) 기본형 8가지
		 *         2) 참조형 - 배열, 클래스, 인터페이스
		 *              new 연산자에의해   힙(동적)영역에 실제 저장공간이 할당되고 
		 *              그 주소를 참조한다. 
		 *         
		 *             //  m  변수, [참조변수], 배열명
		 *             int [] m = new int[3];
		 *             
		 *    7.   자바 변수 선언
		 *       //         변수,참조변수, 객체명
		 *        클래스 변수명;
		 *        Random rnd = new Random();  
		 *        
		 *         new Random();  실제 힙 영역에 객체가 생성되는 코딩. ( 인스턴스화 == 객체 생성 과정 )
		 *                                                 인스턴스
		 *        Random 클래스를 자료형으로 선언된 참조변수를 "객체"라고 한다. 
		 *  
		 *   8. 자동차(객체) 클래스 설계         
		 *       1) 객체의 구성 요소 파악 -> 메서드,필드 목록 작성
		 *         스포츠카
		 *         3도어 
		 *         전기
		 *         알루미늄 차체( 특수 재료 )
		 *         가로 * 세로
		 *          300km/h
		 *          등등
		 *      2) 클래스 선언
		 *      3) 객체 생성 - 테스트
		 *       :
		 *       :
		 *       Car 클래스 선언...   
		 * */
		

	} //main

} // class







